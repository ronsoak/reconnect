# Generated by Django 5.0.6 on 2024-05-21 05:13

import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Logic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('METHOD', 'Feed'), ('KEYWORD', 'Keyword')], help_text='Category of Logic', max_length=256, verbose_name='Logic Category')),
                ('value', models.CharField(help_text='Logic Value', max_length=512, verbose_name='Logic Value')),
            ],
            options={
                'verbose_name': 'Logic',
                'verbose_name_plural': 'Logic',
                'db_table': 'logic',
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the Site', max_length=256, verbose_name='Name')),
                ('url', models.URLField(help_text='Top level URL of the Site', verbose_name='Site URL')),
                ('feed', models.URLField(help_text='The URL of the Feed', verbose_name='Feed URL')),
                ('description', models.TextField(help_text='Explanation of the site', max_length=2000, verbose_name='Site Description')),
                ('logo', models.ImageField(help_text='Upload the sites logo', max_length=512, upload_to='sites', verbose_name='Site Logo')),
                ('modifier', models.FloatField(default=1, help_text='Rank Modifier', verbose_name='Modifier Value')),
                ('hidden', models.BooleanField(default=False, help_text='Indicates whether the site is hidden', verbose_name='Site Hidden')),
                ('feed_type', models.ForeignKey(limit_choices_to=models.Q(('category', 'METHOD')), on_delete=django.db.models.deletion.PROTECT, to='website.logic')),
            ],
            options={
                'verbose_name': 'Sites',
                'verbose_name_plural': 'Sites',
                'db_table': 'sites',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('article', models.UUIDField(default=uuid.uuid4, verbose_name='Article ID')),
                ('session', models.CharField(max_length=128, verbose_name='Session ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Vote Date')),
            ],
            options={
                'verbose_name': 'Votes',
                'verbose_name_plural': 'Votes',
                'db_table': 'votes',
                'ordering': ['session'],
                'indexes': [models.Index(fields=['session', 'article'], name='vote_exists_idx')],
            },
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=256, verbose_name='Article Title')),
                ('url', models.URLField(verbose_name='Article URL')),
                ('image_url', models.CharField(max_length=512, verbose_name='Image Reference')),
                ('published', models.DateField(blank=True, help_text='The date the article was published', null=True, verbose_name='Published Date')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date the article was created in the site', null=True, verbose_name='Created Date')),
                ('boost', models.FloatField(default=0, help_text='Count of vote clicks', verbose_name='Vote Count')),
                ('clicks', models.FloatField(default=0, help_text='Count of link clicks', verbose_name='Click Count')),
                ('modifier', models.FloatField(default=1, verbose_name='Modifier Score')),
                ('rank', models.GeneratedField(db_persist=True, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('clicks'), '+', models.F('boost')), '*', models.F('modifier')), output_field=models.IntegerField(default=0, help_text='Rank in the feed', verbose_name='Rank Score'))),
                ('hidden', models.BooleanField(default=False, help_text='The article is hidden', verbose_name='Article Hidden')),
                ('site_hide', models.BooleanField(default=False, help_text='The parent site is hidden', verbose_name='Site Hidden')),
                ('curated', models.BooleanField(default=False, help_text='The article is curate', verbose_name='Article Curated')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='website.sites')),
            ],
            options={
                'verbose_name': 'Articles',
                'verbose_name_plural': 'Articles',
                'db_table': 'articles',
                'ordering': ['created'],
                'indexes': [models.Index(fields=['hidden'], name='hidden_idx'), models.Index(fields=['site_hide'], name='site_hide_idx'), models.Index(fields=['-curated'], name='curated_idx'), models.Index(fields=['-published'], name='published_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='articles',
            constraint=models.UniqueConstraint(fields=('url',), name='unique_url'),
        ),
    ]
